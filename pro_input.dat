かつてのコンピュータでは、処理の手順を表すよう電気的配線を行うことによって、プログラムが作成された。
これをワイヤードロジック（結線論理）方式という。この方法では、実行するプログラムを変更するたびに、配線の変更作業が必要となった。
一方現在では、プログラム内蔵方式が主流となっている。
プログラムを作ることをプログラミングと言い、プログラミング作業をする人をプログラマという。
プログラムの作成には、まずコンピュータによる処理の手順を表にしたものを作成し、この手順書をアルゴリズムと呼ぶ。
このアルゴリズムをコンピュータに理解できる人工言語を使って記述し、コンピュータに入力するのであるが、そのために用いられる言語をプログラミング言語と呼ぶ。
非常に機械の動作に近い処理は機械語と呼ばれるバイナリを用いて記述されるが、そうでない場合は人間に理解しやすいように抽象化したプログラミング言語を用いて行われることが一般的である。
これらを用いて記述されたプログラムの設計図をソースコードと呼ぶ。
音楽の楽譜になぞらえて、計算機の算譜ということがある。
ソースコードは、それをコンパイルすることで、機械が解釈できる形のプログラムである実行ファイルを得ることができる。
一方、コンパイルすることなく、プログラムを実行できる方式として、インタプリタによる方式がある。
プログラムは、実現する機能によって、コンピュータ自体の動作を制御するオペレーティングシステムなどのシステムソフトウェアと、表計算ソフトなど使用者が目的とする作業そのものを行うアプリケーションソフトウェアに大別される。
